using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.Serialization;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;

namespace Xrm.Framework.CI.Common.Entities
{
    /// <summary>
    ///     Contains information regarding which views are available for users to display on their personal walls. Only an
    ///     administrator can specify the views that users can choose from to display on their personal walls.
    /// </summary>
    [DataContract]
    [EntityLogicalName("msdyn_wallsavedquery")]
    [GeneratedCode("CrmSvcUtil", "6.0.0000.0809")]
    public class msdyn_wallsavedquery : Entity, INotifyPropertyChanging, INotifyPropertyChanged
    {
        public const string EntityLogicalName = "msdyn_wallsavedquery";

        public const int EntityTypeCode = 10003;

        /// <summary>
        ///     Default Constructor.
        /// </summary>
        public msdyn_wallsavedquery() :
            base(EntityLogicalName)
        {
        }

        /// <summary>
        ///     Unique identifier of the user who created the record.
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy
        {
            get { return GetAttributeValue<EntityReference>("createdby"); }
        }

        /// <summary>
        ///     Date and time when the record was created.
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn
        {
            get { return GetAttributeValue<DateTime?>("createdon"); }
        }

        /// <summary>
        ///     Unique identifier of the delegate user who created the record.
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy
        {
            get { return GetAttributeValue<EntityReference>("createdonbehalfby"); }
        }

        /// <summary>
        ///     Sequence number of the import that created this record.
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber
        {
            get { return GetAttributeValue<int?>("importsequencenumber"); }
            set
            {
                OnPropertyChanging("ImportSequenceNumber");
                SetAttributeValue("importsequencenumber", value);
                OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        ///     Unique identifier of the user who modified the record.
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy
        {
            get { return GetAttributeValue<EntityReference>("modifiedby"); }
        }

        /// <summary>
        ///     Date and time when the record was modified.
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn
        {
            get { return GetAttributeValue<DateTime?>("modifiedon"); }
        }

        /// <summary>
        ///     Unique identifier of the delegate user who modified the record.
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy
        {
            get { return GetAttributeValue<EntityReference>("modifiedonbehalfby"); }
        }

        /// <summary>
        ///     Type of entity to which the corresponding views belong
        /// </summary>
        [AttributeLogicalName("msdyn_entitydisplayname")]
        public string msdyn_entitydisplayname
        {
            get { return GetAttributeValue<string>("msdyn_entitydisplayname"); }
            set
            {
                OnPropertyChanging("msdyn_entitydisplayname");
                SetAttributeValue("msdyn_entitydisplayname", value);
                OnPropertyChanged("msdyn_entitydisplayname");
            }
        }

        /// <summary>
        ///     Name of the entity to which the corresponding views belong.
        /// </summary>
        [AttributeLogicalName("msdyn_entityname")]
        public string msdyn_entityname
        {
            get { return GetAttributeValue<string>("msdyn_entityname"); }
            set
            {
                OnPropertyChanging("msdyn_entityname");
                SetAttributeValue("msdyn_entityname", value);
                OnPropertyChanged("msdyn_entityname");
            }
        }

        /// <summary>
        ///     Information that indicates whether the entity is virtual, that is whether, it is generated by a plug-in, and no
        ///     corresponding entity instance exists.
        /// </summary>
        [AttributeLogicalName("msdyn_isvirtual")]
        public bool? msdyn_IsVirtual
        {
            get { return GetAttributeValue<bool?>("msdyn_isvirtual"); }
            set
            {
                OnPropertyChanging("msdyn_IsVirtual");
                SetAttributeValue("msdyn_isvirtual", value);
                OnPropertyChanged("msdyn_IsVirtual");
            }
        }

        /// <summary>
        ///     Indicates that corresponding system view should be displayed on personal wall
        /// </summary>
        [AttributeLogicalName("msdyn_isvisible")]
        public bool? msdyn_IsVisible
        {
            get { return GetAttributeValue<bool?>("msdyn_isvisible"); }
            set
            {
                OnPropertyChanging("msdyn_IsVisible");
                SetAttributeValue("msdyn_isvisible", value);
                OnPropertyChanged("msdyn_IsVisible");
            }
        }

        /// <summary>
        ///     For internal use only.
        /// </summary>
        [AttributeLogicalName("msdyn_isvisiblebit")]
        public int? msdyn_isvisiblebit
        {
            get { return GetAttributeValue<int?>("msdyn_isvisiblebit"); }
            set
            {
                OnPropertyChanging("msdyn_isvisiblebit");
                SetAttributeValue("msdyn_isvisiblebit", value);
                OnPropertyChanged("msdyn_isvisiblebit");
            }
        }

        /// <summary>
        ///     Type of entity to which the corresponding views belong.
        /// </summary>
        [AttributeLogicalName("msdyn_otc")]
        public int? msdyn_otc
        {
            get { return GetAttributeValue<int?>("msdyn_otc"); }
            set
            {
                OnPropertyChanging("msdyn_otc");
                SetAttributeValue("msdyn_otc", value);
                OnPropertyChanged("msdyn_otc");
            }
        }

        /// <summary>
        ///     Unique identifier for Post Configuration associated with Wall View.
        /// </summary>
        [AttributeLogicalName("msdyn_postconfigurationid")]
        public EntityReference msdyn_postconfigurationid
        {
            get { return GetAttributeValue<EntityReference>("msdyn_postconfigurationid"); }
            set
            {
                OnPropertyChanging("msdyn_postconfigurationid");
                SetAttributeValue("msdyn_postconfigurationid", value);
                OnPropertyChanged("msdyn_postconfigurationid");
            }
        }

        /// <summary>
        ///     Unique identifier of the view that should be displayed on the personal wall for all users.
        /// </summary>
        [AttributeLogicalName("msdyn_savedqueryid")]
        public string msdyn_SavedQueryId
        {
            get { return GetAttributeValue<string>("msdyn_savedqueryid"); }
            set
            {
                OnPropertyChanging("msdyn_SavedQueryId");
                SetAttributeValue("msdyn_savedqueryid", value);
                OnPropertyChanged("msdyn_SavedQueryId");
            }
        }

        /// <summary>
        ///     Name of the corresponding view.
        /// </summary>
        [AttributeLogicalName("msdyn_savedqueryname")]
        public string msdyn_savedqueryname
        {
            get { return GetAttributeValue<string>("msdyn_savedqueryname"); }
            set
            {
                OnPropertyChanging("msdyn_savedqueryname");
                SetAttributeValue("msdyn_savedqueryname", value);
                OnPropertyChanged("msdyn_savedqueryname");
            }
        }

        /// <summary>
        ///     Unique identifier for entity instances
        /// </summary>
        [AttributeLogicalName("msdyn_wallsavedqueryid")]
        public Guid? msdyn_wallsavedqueryId
        {
            get { return GetAttributeValue<Guid?>("msdyn_wallsavedqueryid"); }
            set
            {
                OnPropertyChanging("msdyn_wallsavedqueryId");
                SetAttributeValue("msdyn_wallsavedqueryid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = Guid.Empty;
                }
                OnPropertyChanged("msdyn_wallsavedqueryId");
            }
        }

        [AttributeLogicalName("msdyn_wallsavedqueryid")]
        public override Guid Id
        {
            get { return base.Id; }
            set { msdyn_wallsavedqueryId = value; }
        }

        /// <summary>
        ///     Unique identifier for the organization
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId
        {
            get { return GetAttributeValue<EntityReference>("organizationid"); }
        }

        /// <summary>
        ///     Date and time that the record was migrated.
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn
        {
            get { return GetAttributeValue<DateTime?>("overriddencreatedon"); }
            set
            {
                OnPropertyChanging("OverriddenCreatedOn");
                SetAttributeValue("overriddencreatedon", value);
                OnPropertyChanged("OverriddenCreatedOn");
            }
        }

        /// <summary>
        ///     Status of the Wall View
        /// </summary>
        [AttributeLogicalName("statecode")]
        public msdyn_wallsavedqueryState? statecode
        {
            get
            {
                var optionSet = GetAttributeValue<OptionSetValue>("statecode");
                if ((optionSet != null))
                {
                    return
                        ((msdyn_wallsavedqueryState)
                            (Enum.ToObject(typeof (msdyn_wallsavedqueryState), optionSet.Value)));
                }
                return null;
            }
        }

        /// <summary>
        ///     Reason for the status of the Wall View
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public OptionSetValue statuscode
        {
            get { return GetAttributeValue<OptionSetValue>("statuscode"); }
            set
            {
                OnPropertyChanging("statuscode");
                SetAttributeValue("statuscode", value);
                OnPropertyChanged("statuscode");
            }
        }

        /// <summary>
        ///     For internal use only.
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber
        {
            get { return GetAttributeValue<int?>("timezoneruleversionnumber"); }
            set
            {
                OnPropertyChanging("TimeZoneRuleVersionNumber");
                SetAttributeValue("timezoneruleversionnumber", value);
                OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        ///     Time zone code that was in use when the record was created.
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode
        {
            get { return GetAttributeValue<int?>("utcconversiontimezonecode"); }
            set
            {
                OnPropertyChanging("UTCConversionTimeZoneCode");
                SetAttributeValue("utcconversiontimezonecode", value);
                OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber
        {
            get { return GetAttributeValue<long?>("versionnumber"); }
        }

        /// <summary>
        ///     1:N msdyn_wallsavedquery_AsyncOperations
        /// </summary>
        [RelationshipSchemaName("msdyn_wallsavedquery_AsyncOperations")]
        public IEnumerable<AsyncOperation> msdyn_wallsavedquery_AsyncOperations
        {
            get { return GetRelatedEntities<AsyncOperation>("msdyn_wallsavedquery_AsyncOperations", null); }
            set
            {
                OnPropertyChanging("msdyn_wallsavedquery_AsyncOperations");
                SetRelatedEntities("msdyn_wallsavedquery_AsyncOperations", null, value);
                OnPropertyChanged("msdyn_wallsavedquery_AsyncOperations");
            }
        }

        /// <summary>
        ///     1:N msdyn_wallsavedquery_BulkDeleteFailures
        /// </summary>
        [RelationshipSchemaName("msdyn_wallsavedquery_BulkDeleteFailures")]
        public IEnumerable<BulkDeleteFailure> msdyn_wallsavedquery_BulkDeleteFailures
        {
            get { return GetRelatedEntities<BulkDeleteFailure>("msdyn_wallsavedquery_BulkDeleteFailures", null); }
            set
            {
                OnPropertyChanging("msdyn_wallsavedquery_BulkDeleteFailures");
                SetRelatedEntities("msdyn_wallsavedquery_BulkDeleteFailures", null, value);
                OnPropertyChanged("msdyn_wallsavedquery_BulkDeleteFailures");
            }
        }

        /// <summary>
        ///     1:N msdyn_wallsavedquery_PrincipalObjectAttributeAccesses
        /// </summary>
        [RelationshipSchemaName("msdyn_wallsavedquery_PrincipalObjectAttributeAccesses")]
        public IEnumerable<PrincipalObjectAttributeAccess> msdyn_wallsavedquery_PrincipalObjectAttributeAccesses
        {
            get
            {
                return
                    GetRelatedEntities<PrincipalObjectAttributeAccess>(
                        "msdyn_wallsavedquery_PrincipalObjectAttributeAccesses", null);
            }
            set
            {
                OnPropertyChanging("msdyn_wallsavedquery_PrincipalObjectAttributeAccesses");
                SetRelatedEntities("msdyn_wallsavedquery_PrincipalObjectAttributeAccesses", null, value);
                OnPropertyChanged("msdyn_wallsavedquery_PrincipalObjectAttributeAccesses");
            }
        }

        /// <summary>
        ///     1:N msdyn_wallsavedquery_ProcessSession
        /// </summary>
        [RelationshipSchemaName("msdyn_wallsavedquery_ProcessSession")]
        public IEnumerable<ProcessSession> msdyn_wallsavedquery_ProcessSession
        {
            get { return GetRelatedEntities<ProcessSession>("msdyn_wallsavedquery_ProcessSession", null); }
            set
            {
                OnPropertyChanging("msdyn_wallsavedquery_ProcessSession");
                SetRelatedEntities("msdyn_wallsavedquery_ProcessSession", null, value);
                OnPropertyChanged("msdyn_wallsavedquery_ProcessSession");
            }
        }

        /// <summary>
        ///     1:N msdyn_wallsavedquery_UserEntityInstanceDatas
        /// </summary>
        [RelationshipSchemaName("msdyn_wallsavedquery_UserEntityInstanceDatas")]
        public IEnumerable<UserEntityInstanceData> msdyn_wallsavedquery_UserEntityInstanceDatas
        {
            get
            {
                return GetRelatedEntities<UserEntityInstanceData>("msdyn_wallsavedquery_UserEntityInstanceDatas", null);
            }
            set
            {
                OnPropertyChanging("msdyn_wallsavedquery_UserEntityInstanceDatas");
                SetRelatedEntities("msdyn_wallsavedquery_UserEntityInstanceDatas", null, value);
                OnPropertyChanged("msdyn_wallsavedquery_UserEntityInstanceDatas");
            }
        }

        /// <summary>
        ///     1:N msdyn_wallsavedquery_wallsavedqueryusersettings
        /// </summary>
        [RelationshipSchemaName("msdyn_wallsavedquery_wallsavedqueryusersettings")]
        public IEnumerable<msdyn_wallsavedqueryusersettings> msdyn_wallsavedquery_wallsavedqueryusersettings
        {
            get
            {
                return
                    GetRelatedEntities<msdyn_wallsavedqueryusersettings>(
                        "msdyn_wallsavedquery_wallsavedqueryusersettings", null);
            }
            set
            {
                OnPropertyChanging("msdyn_wallsavedquery_wallsavedqueryusersettings");
                SetRelatedEntities("msdyn_wallsavedquery_wallsavedqueryusersettings", null, value);
                OnPropertyChanged("msdyn_wallsavedquery_wallsavedqueryusersettings");
            }
        }

        /// <summary>
        ///     N:1 lk_msdyn_wallsavedquery_createdby
        /// </summary>
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_msdyn_wallsavedquery_createdby")]
        public SystemUser lk_msdyn_wallsavedquery_createdby
        {
            get { return GetRelatedEntity<SystemUser>("lk_msdyn_wallsavedquery_createdby", null); }
        }

        /// <summary>
        ///     N:1 lk_msdyn_wallsavedquery_createdonbehalfby
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_msdyn_wallsavedquery_createdonbehalfby")]
        public SystemUser lk_msdyn_wallsavedquery_createdonbehalfby
        {
            get { return GetRelatedEntity<SystemUser>("lk_msdyn_wallsavedquery_createdonbehalfby", null); }
        }

        /// <summary>
        ///     N:1 lk_msdyn_wallsavedquery_modifiedby
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_msdyn_wallsavedquery_modifiedby")]
        public SystemUser lk_msdyn_wallsavedquery_modifiedby
        {
            get { return GetRelatedEntity<SystemUser>("lk_msdyn_wallsavedquery_modifiedby", null); }
        }

        /// <summary>
        ///     N:1 lk_msdyn_wallsavedquery_modifiedonbehalfby
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_msdyn_wallsavedquery_modifiedonbehalfby")]
        public SystemUser lk_msdyn_wallsavedquery_modifiedonbehalfby
        {
            get { return GetRelatedEntity<SystemUser>("lk_msdyn_wallsavedquery_modifiedonbehalfby", null); }
        }

        /// <summary>
        ///     N:1 msdyn_postconfig_wallsavedquery
        /// </summary>
        [AttributeLogicalName("msdyn_postconfigurationid")]
        [RelationshipSchemaName("msdyn_postconfig_wallsavedquery")]
        public msdyn_PostConfig msdyn_postconfig_wallsavedquery
        {
            get { return GetRelatedEntity<msdyn_PostConfig>("msdyn_postconfig_wallsavedquery", null); }
            set
            {
                OnPropertyChanging("msdyn_postconfig_wallsavedquery");
                SetRelatedEntity("msdyn_postconfig_wallsavedquery", null, value);
                OnPropertyChanged("msdyn_postconfig_wallsavedquery");
            }
        }

        /// <summary>
        ///     N:1 organization_msdyn_wallsavedquery
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_msdyn_wallsavedquery")]
        public Organization organization_msdyn_wallsavedquery
        {
            get { return GetRelatedEntity<Organization>("organization_msdyn_wallsavedquery", null); }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        public event PropertyChangingEventHandler PropertyChanging;

        private void OnPropertyChanged(string propertyName)
        {
            if ((PropertyChanged != null))
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void OnPropertyChanging(string propertyName)
        {
            if ((PropertyChanging != null))
            {
                PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
            }
        }
    }
}